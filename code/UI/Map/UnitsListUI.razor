@using Sandbox.UI
@attribute [StyleSheet]
@inherits Kira.UI.BaseNavWindow
@namespace Kira.UI

@if (!IsActive) return;
<root>
    <div class="units">
        <div class="units-list">
            @{
                int i = 0;
            }

            @foreach (VillagerData pawn in ColonyManager.Instance.Villagers)
            {
                int i1 = i;
                <div class="villager" onmouseout=@(() => OnMouseExit(i1)) onmouseover=@(() => OnMouseOver(pawn, i1))>
                    <div class="pawntext">
                        @pawn.FullName
                    </div>
                </div>
                @{
                    i++;
                }
            }
        </div>
    </div>
    @if (IsHoveringVillager && villagerHovering != null)
    {
        <div class="tooltip">
            <div class="tooltip-text">
                @villagerHovering.FullName
            </div>
            <div class="stats">
                <div class="tooltip-text">
                    ❤️ @($"{villagerHovering.Health} / {villagerHovering.MaxHealth}")
                </div>
                <div class="tooltip-text">
                    🍗 @($"{villagerHovering.Hunger} / 100")
                </div>
                <div class="tooltip-text">
                    💧 @($"{villagerHovering.Thirst} / 100")
                </div>
            </div>
        </div>
    }
</root>

@code
{
    private bool UnitsMenuVisible { get; set; }
    private ColonyManager Colony { get; set; }
    public VillagerData villagerHovering { get; set; }
    private int hoverId { get; set; }
    public bool IsHoveringVillager { get; set; }
    public override bool IsActive { get; set; }

    public void OnMouseExit(int id)
    {
        if (hoverId == id)
            IsHoveringVillager = false;
    }

    private void OnMouseOver(VillagerData data, int id)
    {
        hoverId = id;
        villagerHovering = data;
        IsHoveringVillager = true;
    }

    protected override void OnAfterTreeRender(bool firstTime)
    {
        if (!firstTime) return;

        Colony = Scene.Components.GetAll<ColonyManager>().First();
    }

    protected override int BuildHash() => System.HashCode.Combine(IsHoveringVillager, UnitsMenuVisible, IsActive);
}