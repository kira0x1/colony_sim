@namespace Kira.UI
@using Sandbox.UI
@inherits Kira.UI.BaseNavWindow
@attribute [StyleSheet]

@{
    var c = IsActive ? "" : "hidden";
}

<root class="@c">
</root>

@code
{
    private TabContainer tabContainer = new TabContainer();
    private List<TabContainer.Tab> Tabs = new List<TabContainer.Tab>();
    public override bool IsActive { get; set; } = false;

    protected override void OnAfterTreeRender(bool firstTime)
    {
        base.OnAfterTreeRender(firstTime);

        if (!firstTime)
        {
            return;
        }

        Tabs = new List<TabContainer.Tab>();

        tabContainer = new TabContainer();

        tabContainer.Tabs = Tabs;

        tabContainer.AddTab(new UnitsListUI() { IsActive = true }, "units", "Units", "groups");
        tabContainer.AddTab(new NavDebugUI(), "ai", "ai", "psychology");
        tabContainer.AddTab(new UnitMap() { IsActive = true }, "map", "map", "map");

        tabContainer.Id = "tabs";
        tabContainer.ActiveTab = Tabs[1].TabName;
        this.AddChild(tabContainer);
    }

    /// <summary>
    /// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
    /// </summary>
    protected override int BuildHash() => System.HashCode.Combine(IsActive, tabContainer);
}