@namespace Kira.UI
@using Sandbox.UI
@inherits Kira.UI.BaseNavWindow
@attribute [StyleSheet]

@{ var c = IsActive ? "" : "hidden"; }
<root class="@c">
</root>

@code
{
    private readonly TabContainer tabContainer = new TabContainer();
    private List<TabContainer.Tab> Tabs = new List<TabContainer.Tab>();
    public override bool IsActive { get; set; } = false;
    private Panel meowPanel;

    protected override void OnAfterTreeRender(bool firstTime)
    {
        base.OnAfterTreeRender(firstTime);

        if (!firstTime)
        {
            return;
        }

        Panel container = new Panel();
        container.SetClass("container", false);
        this.AddChild(container);

        meowPanel = new Panel();
        meowPanel.SetClass("meow", true);

        Tabs = new List<TabContainer.Tab>();
        var mp = new UnitsListUI();
        mp.IsActive = true;

        tabContainer.Tabs = Tabs;
        tabContainer.AddTab(meowPanel, "meow", "Meooow", "restaurants");
        tabContainer.AddTab(mp, "units", "UN", "people");
        tabContainer.Id = "tabs";
        tabContainer.ActiveTab = Tabs[1].TabName;

        this.AddChild(tabContainer);
    }

    /// <summary>
    /// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
    /// </summary>
    protected override int BuildHash() => System.HashCode.Combine(IsActive, tabContainer);
}