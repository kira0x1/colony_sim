@namespace Kira.UI
@attribute [StyleSheet]
@inherits Panel
@using Sandbox.Razor
@using Sandbox.UI


<root>
</root>

@code {
    public ColonyManager Colony { get; set; }
    public MinimapSymbol[] MapSymbols { get; set; } = new MinimapSymbol[3];

    protected override void OnAfterTreeRender(bool firstTime)
    {
        if (!firstTime) return;
        for (int i = 0; i < 3; i++)
        {
            VillagerData c = Colony.Villagers[i];
            MinimapSymbol ms = new MinimapSymbol(c, this);
            MapSymbols[i] = ms;
            AddChild(ms);
        }
    }

    public override void OnLayout(ref Rect layoutRect)
    {
        base.OnLayout(ref layoutRect);

        var rect = this.Box.Rect;
        this.Box.Rect = rect;
    }

    public Rect CalculatePosition(Vector2 position, Box mbox)
    {
        Rect finalRect = mbox.Rect;
        finalRect.Width = Box.Rect.Width / 6f;
        finalRect.Height = Box.Rect.Height / 6f;

        Vector2 pos = Box.Rect.Center;
        pos.x -= finalRect.Width * position.x + finalRect.Width / 2f;
        pos.y -= finalRect.Height * position.y + finalRect.Height / 2f;

        finalRect.Position = pos;
        return finalRect;
    }

    protected override int BuildHash() => System.HashCode.Combine(MapSymbols.Select(x => x.GetHashCode()));
}